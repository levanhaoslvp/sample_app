version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

executors:
  default:
    working_directory: ~/sample_app
    docker:
      - image: circleci/ruby:3.0.1-node-browsers-legacy
        environment:
          DB_HOST: 127.0.0.1
          RAILS_ENV: test
          BUNDLER_VERSION: 2.1.17
      - image: circleci/mysql:8.0.19-ram
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: Hao@0869
          MYSQL_DB: sample_app_test

commands:
  configure_bundler:
    description: Configure bundler
    steps:
      - run:
          name: Configure bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
  install_bundler:
    description: bundler check, install
    steps:
      - run:
          name: Which bundler?
          command: bundle -v
      - run:
          name: bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run:
          name: webpacker install
          command: |
            bundle exec yarn upgrade webpack

jobs:
  build:
    executor: default
    steps:
      - checkout
      # Restore bundle cache
      - restore_cache:
          keys:
            - sample-app-{{ checksum "Gemfile.lock" }}
            - sample-app-
      - configure_bundler
      - install_bundler
      # Store bundle cache
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

  rubocop:
    executor: default
    steps:
      - checkout
      - configure_bundler
      - install_bundler
      - run:
          name: Rubocop
          command: |
            bundle exec rubocop -A
            bundle exec rubocop

  test:
    executor: default
    steps:
      - checkout
      - configure_bundler
      - install_bundler
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      # Database setup
      - run: cp -v config/database.ci.yml config/database.yml
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load
      - run:
          name: run rspec
          command: |
            bundle exec rspec --profile 10 \
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: tmp/screenshots
          destination: test-screenshots

   deploy:
    docker:
      - image: buildpack-deps:trusty
    environment:
      HEROKU_API_KEY: 06d29ced-7d1d-413a-bdab-9166f6db654a
      HEROKU_APP_NAME: intense-earth-58731
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - rubocop
          requires:
            - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master