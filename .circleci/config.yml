version: 2.1
orbs:
  ruby: circleci/ruby@1.0
  node: circleci/node@2

jobs:
  build:
    docker:
      - image: cimg/ruby:3.0.1-node
        auth:
         username: mydockerhub-user
         password: $DOCKERHUB_PASSWORD 
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"

  checking:
    docker:
      - image: 'cimg/ruby:3.0.1-node'
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Rubocop
          command: bundle exec rubocop -A

  test:  
    parallelism: 3
    docker:
      # specify the version you desire here 
      - image: circleci/ruby:3.0.1-node-browsers
        environment:
          BUNDLER_VERSION: 2.2.16
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: circleci/mysql:8.0
        environment:
          MYSQL_DATABASE: 'sample_app_test'
          MYSQL_ROOT_USER: 'root'
          MYSQL_ROOT_PASSWORD: 'Hao@0869'
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      # Here we make sure that the secondary container boots
      # up before we run operations on the database.
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Database create
          command: bundle exec rails db:create
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      - ruby/rspec-test
workflows:
  build_and_test:
    jobs:
      - build
      - checking
      - test:
          requires:
            - build
