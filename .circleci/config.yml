version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

executors:
  default:
    working_directory: ~/sample_app
    docker:
      - image: circleci/ruby:3.0.1-node-browsers-legacy
        environment:
          DB_HOST: 127.0.0.1
          RAILS_ENV: test
          BUNDLER_VERSION: 2.1.17
      - image: circleci/mysql:8.0.19-ram
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: Hao@0869
          MYSQL_DB: sample_app_test

jobs:
  build:
    executor: default
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-{{ checksum "Gemfile.lock" }}
            - rails-demo-

      - run:
          name: Which bundler?
          command: bundle -v

      - run:
          name: bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Store bundle cache
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: cp -v config/database.ci.yml config/database.yml
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load

      # RSpec
      - run:
          name: run rspec
          command: |
            bundle exec rspec --profile 10 \

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: tmp/screenshots
          destination: test-screenshots

  # test:
  #   executor: default
  #   parallelism: 3
  #   steps:
  #     - checkout
  #     - ruby/install-deps
  #     - node/install-packages:
  #         cache-key: yarn.lock
  #         pkg-manager: yarn
  #     - run:
  #         command: 'dockerize -wait tcp://localhost:5432 -timeout 1m'
  #         name: Wait for DB
  #     - run:
  #         command: 'bundle exec rails db:schema:load --trace'
  #         name: Database setup
  #     - ruby/rspec-test
  rubocop:
    executor: default
    steps:
      - attach_workspace:
          at: ~/
      - configure_bundler
      - run:
          name: Rubocop
          command: bundle exec rubocop
workflows:
  version: 2
  integration:
    jobs:
      - build
      - rubocop
      - test:
          requires:
            - build